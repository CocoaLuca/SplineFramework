// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios16.0-simulator -enable-objc-interop -cxx-interoperability-mode=default -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SplineRuntime
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Combine
import DeveloperToolsSupport
import Foundation
import Metal
import MetalKit
import Network
@_exported import SplineRuntime
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import simd
@available(iOS 16.0, macCatalyst 16.0, *)
public struct SplineView : SwiftUI.View {
  public init(sceneFileURL: Foundation.URL) throws
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13SplineRuntime0A4ViewV4bodyQrvp", 0) __
}
public enum AppError : Swift.Error {
  case unsupportedDevice
  public static func == (a: SplineRuntime.AppError, b: SplineRuntime.AppError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension SplineRuntime.AppError : Swift.Equatable {}
extension SplineRuntime.AppError : Swift.Hashable {}
